#!/usr/bin/env bash

# Source the script 'common-functions.sh'.
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/common-functions.sh"

_main() {
    local input_files=""
    local output_dir=""

    # Execute initial checks.
    _check_dependencies "
        command=gpg; pkg_manager=apt; package=gpg |
        command=gpg; pkg_manager=dnf; package=gnupg2 |
        command=gpg; pkg_manager=pacman; package=gnupg |
        command=gpg; pkg_manager=zypper; package=gpg2"
    _display_wait_box "0"
    input_files=$(_get_files "par_type=file")
    output_dir=$(_get_output_dir "par_use_same_dir=true")

    local users=""
    users=$(gpg --list-secret-keys --with-colons 2>/dev/null | grep --ignore-case "^uid" | cut -d ':' -f 10)
    if [[ -z "$users" ]]; then
        _display_error_box "Failed: no secret keys imported!"
        _exit_script
    fi

    sleep 0.2 # Avoid 'wait_box' open before.

    # shellcheck disable=SC2086
    if _command_exists "zenity"; then
        users=$(_convert_text_to_delimited_string "$users")
        local zenity_user_list=()

        local user=""
        for user in $users; do
            if (($(_get_items_count "$users") == 1)); then
                zenity_user_list+=(TRUE "$user")
            else
                zenity_user_list+=(FALSE "$user")
            fi
        done

        TEMP_DATA_TASK=$(zenity \
            --list \
            --radiolist \
            --title="Select a user" \
            --text="Select a user from the list below." \
            --column="Select" \
            --column="User" "${zenity_user_list[@]}" \
            --width="$GUI_BOX_WIDTH" \
            --height="$GUI_BOX_HEIGHT" \
            --separator="$FIELD_SEPARATOR" 2>/dev/null) || _exit_script
    elif _command_exists "kdialog"; then
        # shellcheck disable=SC2001
        users=$(sed "s|\(.*\)|\1:\1:off|g" <<<"$users")
        users=$(tr ":\n" "$FIELD_SEPARATOR" <<<"$users")
        TEMP_DATA_TASK=$(kdialog \
            --title "Select a user" \
            --geometry "${GUI_BOX_WIDTH}x${GUI_BOX_HEIGHT}" \
            --radiolist "Select a user from the list below." \
            $users 2>/dev/null) || _exit_script
    fi

    if [[ -z "$TEMP_DATA_TASK" ]]; then
        _display_error_box "Failed: you must select a user!"
        _exit_script
    fi

    # Execute the function '_main_task' for each file in parallel.
    _run_task_parallel "$input_files" "$output_dir"
    _display_result_box "$output_dir"
}

_main_task() {
    local input_file=$1
    local output_dir=$2
    local output_file=""
    local std_output=""

    # Run the main process.
    output_file=$(_get_output_filename "$input_file" "$output_dir" "par_extension_opt=append; par_extension=sig")
    std_output=$(gpg \
        --batch \
        --yes \
        --detach-sign \
        --local-user "$TEMP_DATA_TASK" \
        --output "$output_file" \
        -- "$input_file" 2>&1)
    _check_output "$?" "$std_output" "$input_file" "$output_file" || return 1
}

_main "$@"
