#!/usr/bin/env bash
# shellcheck disable=SC2001
# install_keyboard_shortcut=<Control><Alt>5

# Source the script 'common-functions.sh'.
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/common-functions.sh"

_main() {
    local input_files=""
    local output_dir=""

    # Execute initial checks.
    _check_dependencies ""
    _display_wait_box "2"
    input_files=$(_get_files "par_type=file; par_recursive=true; par_get_pwd=true; par_skip_encoding='binary'; par_skip_extension='pdf|svg'")

    # Execute the function '_main_task' for each file in parallel.
    _run_task_parallel "$input_files" "$output_dir"

    local std_output=""
    std_output=$(_storage_text_read_all)
    std_output=$(_text_sort "$std_output")

    _display_list_box "$std_output" "--column=Endings;--column=File" "files"
}

_main_task() {
    local input_file=$1
    local output_dir=$2
    local std_output=""

    # Run the main process.
    std_output=$(xxd -p -- "$input_file" | tr -d "\n")
    if [[ -z "$std_output" ]]; then
        return
    fi

    if [[ "$std_output" == *"0d0a"* ]]; then
        std_output="CRLF (Windows)"
    elif [[ "$std_output" == *"0a"* ]]; then
        std_output="LF (Unix/Linux)"
    elif [[ "$std_output" == *"0d"* ]]; then
        std_output="CR (Mac OS Classic)"
    else
        std_output="(no line breaks)"
    fi

    _storage_text_write_ln "${std_output}${FIELD_SEPARATOR}${input_file}"
}

_main "$@"
