#!/usr/bin/env bash

# Source the script 'common-functions.sh'.
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/common-functions.sh"

_main() {
    local input_files=""
    local output_dir=""

    # Execute initial checks.
    _check_dependencies "
        command=exiftool; pkg_manager=apt; package=libimage-exiftool-perl |
        command=exiftool; pkg_manager=dnf; package=perl-Image-ExifTool |
        command=exiftool; pkg_manager=pacman; package=perl-image-exiftool |
        command=exiftool; pkg_manager=zypper; package=exiftool"
    _display_wait_box "2"
    input_files=$(_get_files "par_type=file; par_recursive=true")

    # Execute the function '_main_task' for each file in parallel.
    _run_task_parallel "$input_files" "$output_dir"

    local std_output=""
    std_output=$(_storage_text_read_all)

    _display_text_box "$std_output"
}

_main_task() {
    local input_file=$1
    local output_dir=$2
    local std_output=""

    # Run the main process.
    std_output=$(exiftool -- "$input_file" 2>/dev/null)

    # FORMAT THE OUTPUT:
    # Prepend the filename.
    std_output="File: \"$input_file\""$'\n'"$std_output"
    # Remove any extra spaces before colons ":".
    # shellcheck disable=SC2001
    std_output=$(sed "s| \+: |: |g" <<<"$std_output")
    # Remove irrelevant information.
    std_output=$(grep --ignore-case -v "^ExifTool Version Number: " <<<"$std_output")
    std_output=$(grep --ignore-case -v "^File name: " <<<"$std_output")
    std_output=$(grep --ignore-case -v "^Directory: " <<<"$std_output")
    # Remove any occurrence of the current working directory.
    std_output=$(_text_remove_pwd "$std_output")

    _storage_text_write_ln "$std_output"$'\n'
}

_main "$@"
