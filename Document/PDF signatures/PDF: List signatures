#!/data/data/com.termux/files/usr/bin/bash

# Source the script 'common-functions.sh'.
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
ROOT_DIR=$(grep --only-matching "^.*scripts[^/]*" <<<"$SCRIPT_DIR")
source "$ROOT_DIR/common-functions.sh"

_main() {
    local input_files=""

    # Execute initial checks.
    _check_dependencies "
        command=pdfsig; pkg_manager=apt; package=poppler |
        command=pdfsig; pkg_manager=dnf; package=poppler-utils |
        command=pdfsig; pkg_manager=pacman; package=poppler |
        command=pdfsig; pkg_manager=zypper; package=poppler-tools"
    _display_wait_box "2"
    input_files=$(_get_files "par_type=file; par_recursive=true; par_select_extension=pdf")

    # Execute the function '_main_task' for each file in parallel.
    _run_task_parallel "$input_files" ""

    local std_output=""
    std_output=$(_storage_text_read_all)

    _display_text_box "$std_output"
}

_main_task() {
    local input_file=$1
    local output_dir=$2
    local std_output=""
    local status="ðŸ”´"

    # Run the main process.
    std_output=$(pdfsig -- "$input_file")

    if [[ "$std_output" == *"Signature #"* ]]; then
        # FORMAT THE OUTPUT:
        # Remove irrelevant information.
        std_output=$(grep --ignore-case -v "^Digital Signature Info of: " <<<"$std_output")

        if grep --quiet --ignore-case "Signature is Valid" <<<"$std_output"; then
            status="ðŸŸ¢"
        fi

        # Prepend the filename.
        std_output="$status File: \"$(_text_remove_pwd "$input_file")\""$'\n'"$std_output"

        _storage_text_write_ln "$std_output"$'\n'
    fi
}

_main "$@"
